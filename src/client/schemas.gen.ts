// This file is auto-generated by @hey-api/openapi-ts

export const AuthCurrentUserResponseSchema = {
  type: "object",
  properties: {
    message: {
      type: "string",
      description: "A descriptive message explaining the response outcome.",
    },
    status: {
      type: "string",
      description: "A unique code that identifies the type of message.",
    },
    code: {
      type: "integer",
      description: "The HTTP status code associated with the response.",
    },
    success: {
      type: "boolean",
      description:
        "Indicates whether the request was successful or encountered an issue.",
    },
    data: {
      $ref: "#/components/schemas/AuthCurrentUserResponse_",
    },
    error_field: {
      type: "string",
      description: "The specific field that caused an error, if applicable.",
    },
    error_message: {
      type: "string",
      description: "A detailed message explaining the error that occurred.",
    },
    error_field_code: {
      type: "string",
      description:
        "A code representing the error related to the specific field.",
    },
    total: {
      type: "integer",
      description:
        "Total number of items available across all pages. Only used in paginated responses.",
    },
  },
  required: ["code", "data", "message", "status", "success"],
} as const;

export const AuthCurrentUserResponse_Schema = {
  type: "object",
  properties: {
    email: {
      type: "string",
    },
    first_name: {
      type: "string",
    },
    last_name: {
      type: "string",
    },
    full_name: {
      type: "string",
    },
  },
  required: ["email", "first_name", "full_name", "last_name"],
} as const;

export const AuthLoginRequestSchema = {
  type: "object",
  properties: {
    email: {
      type: "string",
      format: "email",
      minLength: 5,
      maxLength: 255,
    },
    password: {
      type: "string",
      minLength: 8,
      maxLength: 64,
    },
  },
} as const;

export const AuthLoginResponseSchema = {
  type: "object",
  properties: {
    message: {
      type: "string",
      description: "A descriptive message explaining the response outcome.",
    },
    status: {
      type: "string",
      description: "A unique code that identifies the type of message.",
    },
    code: {
      type: "integer",
      description: "The HTTP status code associated with the response.",
    },
    success: {
      type: "boolean",
      description:
        "Indicates whether the request was successful or encountered an issue.",
    },
    data: {
      $ref: "#/components/schemas/AuthLoginResponse_",
    },
    error_field: {
      type: "string",
      description: "The specific field that caused an error, if applicable.",
    },
    error_message: {
      type: "string",
      description: "A detailed message explaining the error that occurred.",
    },
    error_field_code: {
      type: "string",
      description:
        "A code representing the error related to the specific field.",
    },
    total: {
      type: "integer",
      description:
        "Total number of items available across all pages. Only used in paginated responses.",
    },
  },
  required: ["code", "data", "message", "status", "success"],
} as const;

export const AuthLoginResponse_Schema = {
  type: "object",
  properties: {
    token: {
      type: "string",
    },
    second: {
      type: "integer",
    },
  },
} as const;

export const AuthLogoutResponseSchema = {
  type: "object",
  properties: {
    message: {
      type: "string",
      description: "A descriptive message explaining the response outcome.",
    },
    status: {
      type: "string",
      description: "A unique code that identifies the type of message.",
    },
    code: {
      type: "integer",
      description: "The HTTP status code associated with the response.",
    },
    success: {
      type: "boolean",
      description:
        "Indicates whether the request was successful or encountered an issue.",
    },
    error_field: {
      type: "string",
      description: "The specific field that caused an error, if applicable.",
    },
    error_message: {
      type: "string",
      description: "A detailed message explaining the error that occurred.",
    },
    error_field_code: {
      type: "string",
      description:
        "A code representing the error related to the specific field.",
    },
    total: {
      type: "integer",
      description:
        "Total number of items available across all pages. Only used in paginated responses.",
    },
  },
  required: ["code", "message", "status", "success"],
} as const;

export const AuthResendOtpRequestSchema = {
  type: "object",
  properties: {
    token: {
      type: "string",
      minLength: 1,
    },
  },
  required: ["token"],
} as const;

export const AuthResendOtpResponseSchema = {
  type: "object",
  properties: {
    message: {
      type: "string",
      description: "A descriptive message explaining the response outcome.",
    },
    status: {
      type: "string",
      description: "A unique code that identifies the type of message.",
    },
    code: {
      type: "integer",
      description: "The HTTP status code associated with the response.",
    },
    success: {
      type: "boolean",
      description:
        "Indicates whether the request was successful or encountered an issue.",
    },
    data: {
      $ref: "#/components/schemas/AuthResendOtpResponse_",
    },
    error_field: {
      type: "string",
      description: "The specific field that caused an error, if applicable.",
    },
    error_message: {
      type: "string",
      description: "A detailed message explaining the error that occurred.",
    },
    error_field_code: {
      type: "string",
      description:
        "A code representing the error related to the specific field.",
    },
    total: {
      type: "integer",
      description:
        "Total number of items available across all pages. Only used in paginated responses.",
    },
  },
  required: ["code", "data", "message", "status", "success"],
} as const;

export const AuthResendOtpResponse_Schema = {
  type: "object",
  properties: {
    token: {
      type: "string",
    },
    second: {
      type: "integer",
    },
  },
} as const;

export const AuthVerifyOtpRequestSchema = {
  type: "object",
  properties: {
    token: {
      type: "string",
      minLength: 1,
    },
    otp: {
      type: "string",
      minLength: 6,
      maxLength: 6,
    },
  },
  required: ["otp", "token"],
} as const;

export const AuthVerifyOtpResponseSchema = {
  type: "object",
  properties: {
    message: {
      type: "string",
      description: "A descriptive message explaining the response outcome.",
    },
    status: {
      type: "string",
      description: "A unique code that identifies the type of message.",
    },
    code: {
      type: "integer",
      description: "The HTTP status code associated with the response.",
    },
    success: {
      type: "boolean",
      description:
        "Indicates whether the request was successful or encountered an issue.",
    },
    data: {
      $ref: "#/components/schemas/AuthVerifyOtpResponse_",
    },
    error_field: {
      type: "string",
      description: "The specific field that caused an error, if applicable.",
    },
    error_message: {
      type: "string",
      description: "A detailed message explaining the error that occurred.",
    },
    error_field_code: {
      type: "string",
      description:
        "A code representing the error related to the specific field.",
    },
    total: {
      type: "integer",
      description:
        "Total number of items available across all pages. Only used in paginated responses.",
    },
  },
  required: ["code", "data", "message", "status", "success"],
} as const;

export const AuthVerifyOtpResponse_Schema = {
  type: "object",
  properties: {
    second: {
      type: "integer",
    },
  },
} as const;
