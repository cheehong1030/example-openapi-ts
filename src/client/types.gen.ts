// This file is auto-generated by @hey-api/openapi-ts

export type AuthCurrentUserResponse2 = {
  /**
   * A descriptive message explaining the response outcome.
   */
  message: string;
  /**
   * A unique code that identifies the type of message.
   */
  status: string;
  /**
   * The HTTP status code associated with the response.
   */
  code: number;
  /**
   * Indicates whether the request was successful or encountered an issue.
   */
  success: boolean;
  data: AuthCurrentUserResponse;
  /**
   * The specific field that caused an error, if applicable.
   */
  error_field?: string;
  /**
   * A detailed message explaining the error that occurred.
   */
  error_message?: string;
  /**
   * A code representing the error related to the specific field.
   */
  error_field_code?: string;
  /**
   * Total number of items available across all pages. Only used in paginated responses.
   */
  total?: number;
};

export type AuthCurrentUserResponse = {
  email: string;
  first_name: string;
  last_name: string;
  full_name: string;
};

export type AuthLoginRequest = {
  email?: string;
  password?: string;
};

export type AuthLoginResponse2 = {
  /**
   * A descriptive message explaining the response outcome.
   */
  message: string;
  /**
   * A unique code that identifies the type of message.
   */
  status: string;
  /**
   * The HTTP status code associated with the response.
   */
  code: number;
  /**
   * Indicates whether the request was successful or encountered an issue.
   */
  success: boolean;
  data: AuthLoginResponse;
  /**
   * The specific field that caused an error, if applicable.
   */
  error_field?: string;
  /**
   * A detailed message explaining the error that occurred.
   */
  error_message?: string;
  /**
   * A code representing the error related to the specific field.
   */
  error_field_code?: string;
  /**
   * Total number of items available across all pages. Only used in paginated responses.
   */
  total?: number;
};

export type AuthLoginResponse = {
  token?: string;
  second?: number;
};

export type AuthLogoutResponse = {
  /**
   * A descriptive message explaining the response outcome.
   */
  message: string;
  /**
   * A unique code that identifies the type of message.
   */
  status: string;
  /**
   * The HTTP status code associated with the response.
   */
  code: number;
  /**
   * Indicates whether the request was successful or encountered an issue.
   */
  success: boolean;
  /**
   * The specific field that caused an error, if applicable.
   */
  error_field?: string;
  /**
   * A detailed message explaining the error that occurred.
   */
  error_message?: string;
  /**
   * A code representing the error related to the specific field.
   */
  error_field_code?: string;
  /**
   * Total number of items available across all pages. Only used in paginated responses.
   */
  total?: number;
};

export type AuthResendOtpRequest = {
  token: string;
};

export type AuthResendOtpResponse2 = {
  /**
   * A descriptive message explaining the response outcome.
   */
  message: string;
  /**
   * A unique code that identifies the type of message.
   */
  status: string;
  /**
   * The HTTP status code associated with the response.
   */
  code: number;
  /**
   * Indicates whether the request was successful or encountered an issue.
   */
  success: boolean;
  data: AuthResendOtpResponse;
  /**
   * The specific field that caused an error, if applicable.
   */
  error_field?: string;
  /**
   * A detailed message explaining the error that occurred.
   */
  error_message?: string;
  /**
   * A code representing the error related to the specific field.
   */
  error_field_code?: string;
  /**
   * Total number of items available across all pages. Only used in paginated responses.
   */
  total?: number;
};

export type AuthResendOtpResponse = {
  token?: string;
  second?: number;
};

export type AuthVerifyOtpRequest = {
  token: string;
  otp: string;
};

export type AuthVerifyOtpResponse2 = {
  /**
   * A descriptive message explaining the response outcome.
   */
  message: string;
  /**
   * A unique code that identifies the type of message.
   */
  status: string;
  /**
   * The HTTP status code associated with the response.
   */
  code: number;
  /**
   * Indicates whether the request was successful or encountered an issue.
   */
  success: boolean;
  data: AuthVerifyOtpResponse;
  /**
   * The specific field that caused an error, if applicable.
   */
  error_field?: string;
  /**
   * A detailed message explaining the error that occurred.
   */
  error_message?: string;
  /**
   * A code representing the error related to the specific field.
   */
  error_field_code?: string;
  /**
   * Total number of items available across all pages. Only used in paginated responses.
   */
  total?: number;
};

export type AuthVerifyOtpResponse = {
  second?: number;
};

export type AuthCurrentUserData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/auth/current_user";
};

export type AuthCurrentUserErrors = {
  401: AuthCurrentUserResponse2;
};

export type AuthCurrentUserError =
  AuthCurrentUserErrors[keyof AuthCurrentUserErrors];

export type AuthCurrentUserResponses = {
  200: AuthCurrentUserResponse2;
};

export type AuthCurrentUserResponse3 =
  AuthCurrentUserResponses[keyof AuthCurrentUserResponses];

export type AuthLoginData = {
  body?: AuthLoginRequest;
  path?: never;
  query?: never;
  url: "/api/auth/login";
};

export type AuthLoginErrors = {
  401: AuthLoginResponse2;
  403: AuthLoginResponse2;
  429: AuthLoginResponse2;
};

export type AuthLoginError = AuthLoginErrors[keyof AuthLoginErrors];

export type AuthLoginResponses = {
  200: AuthLoginResponse2;
};

export type AuthLoginResponse3 = AuthLoginResponses[keyof AuthLoginResponses];

export type AuthLogoutData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/auth/logout";
};

export type AuthLogoutResponses = {
  200: AuthLogoutResponse;
};

export type AuthLogoutResponse2 =
  AuthLogoutResponses[keyof AuthLogoutResponses];

export type AuthResendOtpData = {
  body: AuthResendOtpRequest;
  path?: never;
  query?: never;
  url: "/api/auth/resend_otp";
};

export type AuthResendOtpErrors = {
  401: AuthResendOtpResponse2;
  403: AuthResendOtpResponse2;
  429: AuthResendOtpResponse2;
};

export type AuthResendOtpError = AuthResendOtpErrors[keyof AuthResendOtpErrors];

export type AuthResendOtpResponses = {
  200: AuthResendOtpResponse2;
};

export type AuthResendOtpResponse3 =
  AuthResendOtpResponses[keyof AuthResendOtpResponses];

export type AuthVerifyOtpData = {
  body: AuthVerifyOtpRequest;
  path?: never;
  query?: never;
  url: "/api/auth/verify_otp";
};

export type AuthVerifyOtpErrors = {
  401: AuthVerifyOtpResponse2;
  403: AuthVerifyOtpResponse2;
};

export type AuthVerifyOtpError = AuthVerifyOtpErrors[keyof AuthVerifyOtpErrors];

export type AuthVerifyOtpResponses = {
  200: AuthVerifyOtpResponse2;
};

export type AuthVerifyOtpResponse3 =
  AuthVerifyOtpResponses[keyof AuthVerifyOtpResponses];

export type ClientOptions = {
  baseURL: "http://localhost" | (string & {});
};
